I"UD<h2 id="과제">과제</h2>

<ul>
  <li>깃헙 이슈 1번부터 18번까지 댓글을 순회하며 댓글을 남긴 사용자를 체크 할 것.</li>
  <li>참여율을 계산하세요. 총 18회에 중에 몇 %를 참여했는지 소숫점 두자리가지 보여줄 것.</li>
  <li>Github 자바 라이브러리를 사용 할 것.</li>
</ul>

<hr />

<h2 id="github-api-사용하기">Github API 사용하기</h2>

<p>시작하기 앞서 해당 API를 사용하려면 인증이 필요하다. 인증 방법은 총 4가지가 
존재하고 이에 맞게 자신의 정보가 필요하다.</p>

<ul>
  <li>Username, Password</li>
  <li>Personal access token</li>
  <li>JWT Token</li>
  <li>Gihub App installation token</li>
</ul>

<p>여기서는 personal access token 방식을 이용한다.</p>

<p><a href="https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token">personal token 생성방법</a> 을 이용하여 
토큰을 생성하여 자바소스에서 사용 가능하다. 아래에와 같이 github에서 받은 토큰을 my_personal_token에 넣어 주면 인스턴스가 
생성된다.</p>

<h3 id="주요-클래스">주요 클래스</h3>

<p>과제에 필요한 클래스를 정리해 보면 아래와 같다.</p>

<h5 id="githubbuilder">GitHubBuilder</h5>

<p>withOAuthToken() 메소드에 GitHub에서 발급받은 personal token을 넘겨 Github 인스턴스를 
반환받을 수 있다. <br />
<code class="language-plaintext highlighter-rouge">여기서 주의할 점은 우리가 얻은 토큰은 개인 정보이며 이를 로컬에서만 관리하고 절때 퍼지지 않게 관리해야 한다.   </code></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">GitHub</span> <span class="n">github</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GitHubBuilder</span><span class="o">().</span><span class="na">withOAuthToken</span><span class="o">(</span><span class="s">"my_personal_token"</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</code></pre></div></div>

<p>해당 라이브러리에서 Property File과 Environmental variables를 사용할 수 있게 메소드를 제공하고 있다. 아래와 같이 
사용 가능하다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">path</span> <span class="o">=</span> <span class="s">"src/main/resources/application.properties"</span><span class="o">;</span>
<span class="nc">GitHub</span> <span class="n">github</span> <span class="o">=</span> <span class="nc">GitHubBuilder</span><span class="o">.</span><span class="na">fromPropertyFile</span><span class="o">(</span><span class="n">path</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// application.properties
oauth=토큰 정보 
</code></pre></div></div>

<h5 id="github">GitHub</h5>

<p>getRepository() 메소드에 원하는 repository의 문자열을 이용하여 GHRepository 인스턴스를 반환받을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">GHRepository</span> <span class="n">repository</span> <span class="o">=</span> <span class="n">github</span><span class="o">.</span><span class="na">getRepository</span><span class="o">(</span><span class="s">"WonYong-Jang/Github-API-Practice"</span><span class="o">);</span>
</code></pre></div></div>

<h5 id="ghrepository">GHRepository</h5>

<p>getIssue()메소드에 GHIssueState.ALL 과 같은 이슈의 상태값을 넘겨 해당 repository의 issue들을 필터링해서 인스턴스로 받을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">GHIssue</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">repository</span><span class="o">.</span><span class="na">getIssues</span><span class="o">(</span><span class="nc">GHIssueState</span><span class="o">.</span><span class="na">ALL</span><span class="o">);</span>
</code></pre></div></div>

<h5 id="ghissue">GHIssue</h5>

<p>getComment() 메소드들을 호출해 해당 GHIssue 인스턴스의 comment들을 인스턴스로 반환받을 수 있다.</p>

<h5 id="ghissuecomment">GHIssueComment</h5>

<p>user.getUser() 메소드를 호출해 해당 GHIssueComment 인스턴스의 작성자 정보를 GHUser 인스턴스로 반환받을 수 있다.</p>

<hr />

<h3 id="live-study-대시보드를-만드는-코드를-작성">live-study 대시보드를 만드는 코드를 작성</h3>

<p>각 사용자 별로 issue에 comment를 작성 했는지 확인 하는 예제를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 깃헙 이슈 1번부터 18번까지 댓글을 순회하며 댓글을 남긴 사용자를 체크 할 것.
 참여율을 계산하세요. 총 18회에 중에 몇 %를 참여했는지 소숫점 두자리가지 보여줄 것.
 Github 자바 라이브러리를 사용하면 편리합니다.
 깃헙 API를 익명으로 호출하는데 제한이 있기 때문에 본인의 깃헙 프로젝트에 이슈를 만들고 테스트를 하시면 더 자주 테스트할 수 있습니다.
 */</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">TOTAL_ISSUE</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="c1">// 여기서는 2회까지만 순회</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="c1">// properties 파일로 token 관리</span>
        <span class="nc">String</span> <span class="n">path</span> <span class="o">=</span> <span class="s">"src/main/resources/application.properties"</span><span class="o">;</span>
        <span class="nc">GitHub</span> <span class="n">github</span> <span class="o">=</span> <span class="nc">GitHubBuilder</span><span class="o">.</span><span class="na">fromPropertyFile</span><span class="o">(</span><span class="n">path</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>

        <span class="c1">// 해당 repository 가져오기</span>
        <span class="nc">GHRepository</span> <span class="n">repository</span> <span class="o">=</span> <span class="n">github</span><span class="o">.</span><span class="na">getRepository</span><span class="o">(</span><span class="s">"WonYong-Jang/Github-API-Practice"</span><span class="o">);</span>

        <span class="c1">// 모든 issue 객체 가져오기</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">GHIssue</span><span class="o">&gt;</span> <span class="n">issues</span> <span class="o">=</span> <span class="n">repository</span><span class="o">.</span><span class="na">getIssues</span><span class="o">(</span><span class="nc">GHIssueState</span><span class="o">.</span><span class="na">ALL</span><span class="o">);</span>

        <span class="c1">// 사용자가 각 Issue 별로 몇번 comment를 입력했는지</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">GHUser</span><span class="o">,</span> <span class="nc">Boolean</span><span class="o">[]&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="n">issues</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>

            <span class="c1">// 각 Issue 에 대한 comments 확인</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">GHIssueComment</span><span class="o">&gt;</span> <span class="n">comments</span> <span class="o">=</span> <span class="n">issues</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">getComments</span><span class="o">();</span>

            <span class="c1">// 각 comment 확인</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">GHIssueComment</span> <span class="n">comment</span> <span class="o">:</span> <span class="n">comments</span><span class="o">)</span> <span class="o">{</span>

                <span class="nc">GHUser</span> <span class="n">user</span> <span class="o">=</span> <span class="n">comment</span><span class="o">.</span><span class="na">getUser</span><span class="o">();</span>

                <span class="nc">Boolean</span><span class="o">[]</span> <span class="n">attendance</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Boolean</span><span class="o">[</span><span class="no">TOTAL_ISSUE</span><span class="o">];;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">user</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">attendance</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">attendance</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">user</span><span class="o">,</span> <span class="n">attendance</span><span class="o">);</span>

            <span class="o">}</span>
        <span class="o">}</span>

        <span class="c1">// 참여 횟수 구하기</span>
        <span class="nc">NumOfParticipation</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>

    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">NumOfParticipation</span><span class="o">(</span><span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">GHUser</span><span class="o">,</span> <span class="nc">Boolean</span><span class="o">[]&gt;</span> <span class="n">map</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"### 스터디 현황\n"</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"| 참여자 | 1주차 | 2주차 | 참석율\n"</span><span class="o">);</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"| --- | --- | --- | --- | \n"</span><span class="o">);</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">GHUser</span><span class="o">,</span> <span class="nc">Boolean</span><span class="o">[]&gt;</span> <span class="n">cur</span> <span class="o">:</span> <span class="n">map</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>

            <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="nc">Boolean</span><span class="o">[]</span> <span class="n">attendance</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
            <span class="nc">GHUser</span> <span class="n">user</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">getKey</span><span class="o">();</span>
            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"|"</span><span class="o">+</span><span class="n">user</span><span class="o">.</span><span class="na">getName</span><span class="o">()+</span><span class="s">"|"</span><span class="o">);</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">attendance</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">attendance</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">sum</span><span class="o">++;</span>
                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">":white_check_mark:|"</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="nc">String</span> <span class="n">percent</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%.2f"</span><span class="o">,</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="n">sum</span><span class="o">*</span><span class="mi">100</span><span class="o">)</span> <span class="o">/</span> <span class="no">TOTAL_ISSUE</span><span class="o">);</span>
            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span> <span class="n">percent</span> <span class="o">+</span> <span class="s">"|"</span><span class="o">);</span>
            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>

        <span class="o">}</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<hr />

<h3 id="결과">결과</h3>

<p><img width="464" alt="스크린샷 2020-12-13 오후 8 55 20" src="https://user-images.githubusercontent.com/26623547/102011130-aac64f80-3d85-11eb-8d71-633c8df38fa3.png" /></p>

<hr />

<p>Refererence</p>

<p><a href="https://github-api.kohsuke.org/">https://github-api.kohsuke.org/</a> <br />
<a href="https://github.com/whiteship/live-study/issues/4">https://github.com/whiteship/live-study/issues/4</a></p>

<div id="disqus_thread"></div>
<script>

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://zcx6263.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>

<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>

:ET